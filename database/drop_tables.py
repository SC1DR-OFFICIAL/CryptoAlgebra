# drop_tables.py
import asyncio
import asyncpg
import logging

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–∞—à–µ–π –ë–î PostgreSQL
DB_CONFIG = {
    "host": "quumdrafueyun.beget.app",
    "port": 5432,
    "user": "cloud_user",
    "password": "eLT1ApRZ%Fkf",
    "database": "default_db"
}


async def drop_all_tables():
    conn = await asyncpg.connect(**DB_CONFIG)
    await conn.execute("SET search_path TO public;")
    logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –ë–î, –Ω–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    await conn.execute('DROP TABLE IF EXISTS vote CASCADE;')
    await conn.execute('DROP TABLE IF EXISTS poll_options CASCADE;')
    await conn.execute('DROP TABLE IF EXISTS poll CASCADE;')
    await conn.execute('DROP TABLE IF EXISTS "user" CASCADE;')

    logger.info("üóëÔ∏è –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —É–¥–∞–ª–µ–Ω—ã.")
    await conn.close()
    logger.info("üîí –û—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç –ë–î.")


if __name__ == "__main__":
    asyncio.run(drop_all_tables())
